{"mappings":"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","sources":["node_modules/lodash/isBuffer.js","node_modules/lodash/_root.js","node_modules/lodash/_freeGlobal.js","node_modules/lodash/stubFalse.js","node_modules/lodash/_nodeUtil.js","src/components/header/index.ts","src/components/text/index.ts","node_modules/process/browser.js","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/assert.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/global.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@firebase/database/src/core/version.ts","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/index.ts","node_modules/firebase/app/index.ts","src/rtdb.ts","node_modules/lodash/_arrayMap.js","node_modules/lodash/_listCacheClear.js","node_modules/lodash/eq.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/_listCacheDelete.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_listCacheHas.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_stackClear.js","node_modules/lodash/_stackDelete.js","node_modules/lodash/_stackGet.js","node_modules/lodash/_stackHas.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/isObject.js","node_modules/lodash/isFunction.js","node_modules/lodash/_isMasked.js","node_modules/lodash/_coreJsData.js","node_modules/lodash/_toSource.js","node_modules/lodash/_baseIsNative.js","node_modules/lodash/_getValue.js","node_modules/lodash/_Map.js","node_modules/lodash/_getNative.js","node_modules/lodash/_nativeCreate.js","node_modules/lodash/_hashClear.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_Hash.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_mapCacheDelete.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/_MapCache.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_stackSet.js","node_modules/lodash/_Stack.js","node_modules/lodash/_setCacheAdd.js","node_modules/lodash/_SetCache.js","node_modules/lodash/_setCacheHas.js","node_modules/lodash/_arraySome.js","node_modules/lodash/_cacheHas.js","node_modules/lodash/_equalArrays.js","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_mapToArray.js","node_modules/lodash/_setToArray.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_arrayPush.js","node_modules/lodash/isArray.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_arrayFilter.js","node_modules/lodash/stubArray.js","node_modules/lodash/_getSymbols.js","node_modules/lodash/_baseTimes.js","node_modules/lodash/isObjectLike.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/isArguments.js","node_modules/lodash/_isIndex.js","node_modules/lodash/isLength.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_baseUnary.js","node_modules/lodash/isTypedArray.js","node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/_isPrototype.js","node_modules/lodash/_nativeKeys.js","node_modules/lodash/_overArg.js","node_modules/lodash/_baseKeys.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/keys.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_equalObjects.js","node_modules/lodash/_DataView.js","node_modules/lodash/_Promise.js","node_modules/lodash/_Set.js","node_modules/lodash/_WeakMap.js","node_modules/lodash/_getTag.js","node_modules/lodash/_baseIsEqualDeep.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/_baseIsMatch.js","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/_matchesStrictComparable.js","node_modules/lodash/_baseMatches.js","node_modules/lodash/isSymbol.js","node_modules/lodash/_isKey.js","node_modules/lodash/memoize.js","node_modules/lodash/_memoizeCapped.js","node_modules/lodash/_stringToPath.js","node_modules/lodash/_baseToString.js","node_modules/lodash/toString.js","node_modules/lodash/_castPath.js","node_modules/lodash/_toKey.js","node_modules/lodash/_baseGet.js","node_modules/lodash/get.js","node_modules/lodash/_baseHasIn.js","node_modules/lodash/_hasPath.js","node_modules/lodash/hasIn.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/identity.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_basePropertyDeep.js","node_modules/lodash/property.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/_baseFor.js","node_modules/lodash/_createBaseFor.js","node_modules/lodash/_baseEach.js","node_modules/lodash/_createBaseEach.js","node_modules/lodash/_baseForOwn.js","node_modules/lodash/_baseMap.js","node_modules/lodash/map.js","src/state.ts","src/components/form-u/index.ts","src/pages/welcome/index.ts","src/components/form-m/index.ts","src/components/chat-container/index.ts","src/pages/chat/index.ts","src/router.ts","src/index.ts"],"sourcesContent":["var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","export class Header extends HTMLElement {\n    constructor(){\n        super();\n        this.render();\n    }\n    render(){\n        const shadowDom = this.attachShadow({mode: \"open\"});\n        const div = document.createElement(\"div\");\n        const style = document.createElement(\"style\");\n\n        div.style.backgroundColor = '#FF8282'\n        div.style.width = '100%'\n        div.style.height = '56px'\n        // style.innerHTML = `\n        //         width: 100%;\n        //         height: 60px;\n        //         background-color: #FF8282;\n        // `\n\n        // shadowDom.appendChild(style);\n        shadowDom.appendChild(div);\n    };\n}\ncustomElements.define(\"custom-header\", Header)","export class Typografy extends HTMLElement {\n    constructor(){\n        super();\n        this.render();\n    }\n    render(){\n        const shadowDom = this.attachShadow({mode: \"open\"});\n        const variant = this.getAttribute(\"variant\") || \"normal-high\";\n        const label = this.getAttribute('label')\n        const span = document.createElement(\"span\");\n        const style = document.createElement(\"style\");\n\n        style.innerHTML = `\n            .title{\n                font-family: 'Roboto';\n                font-size: 3.2rem;\n                font-weight: 700;\n            }\n            .normal-high{\n                font-family: 'Roboto';\n                font-size: 1.4rem;\n                font-weight: 500;\n            }\n            .normal-short{\n                font-family: 'Roboto';\n                font-size: 1.1rem;\n                font-weight: 400;\n            }\n        `\n\n        span.className = variant;\n        span.textContent = label;\n        shadowDom.appendChild(style);\n        shadowDom.appendChild(span);\n    };\n}\ncustomElements.define(\"custom-text\", Typografy)","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","const API_BASE_URL = 'http://localhost:8080'\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set } from \"firebase/database\"\n\nconst firebaseConfig = {\n    apiKey: 'ODU5YdhqH0c9vwPmMyHhK46h1VuNuVgn7zG1GZZh',\n    authDomain: 'cap3-mod6-apx.firebaseapp.com',\n    databaseURL:'https://cap3-mod6-apx-default-rtdb.firebaseio.com',\n    projectId: 'cap3-mod6-apx'\n};\n\nconst app = initializeApp(firebaseConfig);\n\nconst rtdbFirebase = getDatabase();\n\nexport { rtdbFirebase }\n\n// const chatReference = ref(db, '/chatRooms/1234')  //  '/chatRooms/1234' para ser específico\n\n// // esto se usa para traer notificaciones de cambios del backend, y mas adelante \n// // conectarlo al state para que le informe a los components, o conectarlo a un solo \n// // component\n// onValue(chatReference, (snapShot)=>{  \n//     const data = snapShot.val()\n//     // document.querySelector('.root').innerHTML = JSON.stringify(data)\n//     console.log(data);\n// })\n\n// function conectToChatRoom(){\n//     fetch(API_BASE_URL + '/api/chatRoom',{\n//         method: 'post'\n//     }).then((res=>{\n//         return res.json()\n//     })).then((Bigdata)=>{\n//     const chatReference2 = ref(db, '/chatRooms/' + Bigdata.id)\n//     onValue(chatReference2, (snapShot)=>{  \n//         const data = snapShot.val()\n//         // document.querySelector('.id').innerHTML = Bigdata.id\n//         // document.querySelector('.root').innerHTML = JSON.stringify(data)\n//         console.log(data);\n//     })\n//         // console.log(data);\n//     })\n// }\n\n// (function(){\n//     // const buttonEl = document.querySelector(\".conectar\")\n//     // buttonEl.addEventListener(\"click\", ()=>{\n//     //     conectToChatRoom()\n//     // })\n// })()\n\n\n//  ** to write data**\n// ** hay que cambiar la confi en la db para poder escribir **\n// function writeDataToDB(userId, name){\n//     const db = getDatabase();\n//     const chatReference = ref(db, '/chatRooms')\n\n//     set(chatReference, {\n//         userName: name,\n//         userId: userId\n//     })\n// }\n\n// writeDataToDB(456, 'Jose')","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","const API_BASE_URL = 'http://localhost:10000'\nimport { getDatabase, ref, onValue, set } from \"firebase/database\"\nimport { rtdbFirebase } from \"./rtdb\"\nimport map from \"lodash/map\"\n\ntype Message = {\n    user: string,\n    messaje: string\n}\n\nconst state = {\n    data: {\n        user: \"\",\n        email: \"\",\n        messages: [],\n        roomId: \"\",\n        longRoomId: \"\",\n        userId: \"\"\n    },\n    // data: {\n    //     chats: {\n    //         chatRoomId: {\n    //             userId: \"\",\n    //             lastMessage: \"\"\n    //         },\n    //         chatroom2:{}\n    //     },\n    //     users: {\n    //         chatId: {\n    //             userX: true\n    //         }\n    //     },\n    //     messages:{\n    //         chatId: {\n    //             m1:{\n    //                 userId: \"\",\n    //                 message: \"\"\n    //             },\n    //             m2: {},\n    //             m3: {}\n    //         },\n    //         chatroom2: {}\n    //     }\n    // },\n\n    listeners: [],\n\n    getState(){\n        return this.data;\n    },\n\n    init(){\n    const currentState = this.getState()\n    console.log('soy init()', currentState);\n    const chatReference = ref(rtdbFirebase, `/rooms/${currentState.longRoomId}/messages`)\n    // console.log(chatReference);\n    onValue(chatReference, (snapShot)=>{  \n        const messagesFromServer = snapShot.val()\n        // console.log(messagesFromServer);\n        const messagesList = map(messagesFromServer)\n        currentState.messages = messagesList;\n        // console.log(messagesList);\n        this.setState(currentState);\n        console.log('soy init() al final',currentState);\n        })\n    },\n\n    setState(newState){\n        this.data = newState;\n        // console.log('soy setState:');\n        console.log('soy setState',state.getState());\n        \n        for (const cb of this.listeners){\n            cb();\n            // this.listeners = [];\n        }\n        // localStorage.setItem(\"saved-game\", JSON.stringify(newState));\n    },\n\n    subscribe(callBack: (any)=>any){\n        this.listeners.push(callBack);\n    },\n\n    setUser(user: string, email: string){\n        const currentState = this.getState();\n        currentState.user = user;\n        currentState.email = email;\n        this.setState(currentState);\n        // console.log('setState: ', currentState);\n        // this.createUserInDB()\n    },\n\n    setRoomId(roomId){\n        const currentState = this.getState;\n        currentState.roomId = roomId;\n        this.setState(currentState)\n    },\n\n    authUser(cb){\n        const currentState = this.getState()\n        fetch(API_BASE_URL + '/api/auth', {\n            method: 'POST',\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: currentState.email,\n                name: currentState.user\n            })\n        }).then((res)=>{\n            return res.json()\n        }).then((data)=>{\n            currentState.userId = data.id;\n            this.setState(currentState)\n            cb()\n        })\n    },\n\n    async createUserInDB(cb){\n        const currentState = this.getState();\n        const response = await fetch(API_BASE_URL + '/api/signup', {\n            method: 'POST',\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: this.data.email,\n                name: this.data.user\n            })\n        })\n        const resp = await response.json()\n        // this.createRoom(resp.id)\n        currentState.userId = resp.id;\n        this.setState(currentState);\n        cb()\n        // console.log('createUser: ', currentState);\n    },\n\n    createRoom(){\n        const currentState = this.getState()\n        // console.log(currentState);\n        fetch(API_BASE_URL + '/api/rooms', {\n            method: 'POST',\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                userId: currentState.userId\n            })\n        }).then((res)=>{\n            return res.json()\n        }).then((data)=>{\n            console.log(data);\n            // const currentState = this.getState();\n            currentState.roomId = data.id;\n            currentState.longRoomId = data.longId;\n            this.setState(currentState);\n            console.log(currentState);\n            this.init()\n        })\n    },\n\n    getRoom(){\n        const currentState = this.getState()\n        // console.log(currentState);\n        fetch(API_BASE_URL + \"/api/rooms/\" + currentState.roomId + \"?userId=\" + currentState.userId, {\n            method: 'GET',\n        }).then((res)=>{\n            return res.json()\n        }).then((data)=>{\n            // console.log(data);\n            currentState.longRoomId = data.rtdbRoomId\n            this.setState(currentState)\n            this.init()\n        })\n    },\n    \n    setMessage(message: string){     // lo unico que hace es mandarle al backend el msj\n        // console.log('soy setMessage:', message);\n        // const currentState = this.getState();\n        // currentState.messages.push(message);\n        // this.setState(currentState);\n        fetch(API_BASE_URL + \"/api/messages\", {    // nuevo, el bkend lo va a guardar en bdrt\n            method: \"post\",\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user: this.data.user,\n                longId: this.data.longRoomId,\n                message: message\n            })\n        })\n    },\n\n    // deleteMessage(id){\n    //     fetch(API_BASE_URL + '/api/messages/' + id, {\n    //         method: 'delete',\n    //         headers: {\n    //             \"content-type\": \"application/json\"\n    //         },\n    //         body : JSON.stringify({\n    //             id: id\n    //         })\n    //     })\n    // }\n}\n    // initOfHistory(){\n    //     const dataOfHistory: any = localStorage.getItem(\"saved-game\");  //db??\n    //     if(dataOfHistory !== null){\n    //         this.setState(JSON.parse(dataOfHistory))\n    //     }   \n    // },\n\n    // pushToHistory(game){   // pushToDb????\n    //     const currentState = this.getState();\n    //     currentState.history.push(game);\n    //     this.setState(currentState);\n    // },\n\n\nexport { state }","import { state } from \"../../state\";\nimport \"../text/index\";\n\nexport class Form extends HTMLElement {\n    shadowDom = this.attachShadow({mode: \"open\"});\n    constructor(){\n        super();\n        this.render();\n    }\n    render(){\n        // const texto = this.getAttribute('label') || \"\";\n        // const placeholder = this.getAttribute('placeHolder');\n        const btnText = this.getAttribute('textBtn');\n        this.shadowDom.innerHTML = `\n            <Form class=\"form\" style=\"\n                                display: flex;\n                                flex-direction: column;\n                                gap: 8px;\n                                padding: 4px;\n                                // border: solid 1px #000;\n                                border-radius: 4px;\n            \">\n                <div style=\"\n                            display: flex;\n                            flex-direction: column;\n                            gap: 6px;\n                    \">\n                    <custom-text label=\"email\"></custom-text>\n                    <input type=\"text\" name=\"email\" placeholder=\"Ingresa un email\" style=\"\n                                                                                    box-sizing: border-box;\n                                                                                    font-size: 1.2rem;\n                                                                                    font-weight: 500;\n                                                                                    height: 50px;\n                                                                                    width: 100%;\n                                                                                    padding: 0 8px;\n                                                                                    color: var(--color-principal);\n                                                                                    // background-color: #e1f3f0;\n                                                                                    border: 2px solid #000;\n                                                                                    border-radius: 4px;\n                    \"></input>\n                </div>\n                <div style=\"\n                            display: flex;\n                            flex-direction: column;\n                            gap: 6px;\n                    \">\n                    <custom-text label=\"Tu nombre:\"></custom-text>\n                    <input type=\"text\" name=\"name\" placeholder=\"Ingresa un nombre\" style=\"\n                                                                                    box-sizing: border-box;\n                                                                                    font-size: 1.2rem;\n                                                                                    font-weight: 500;\n                                                                                    height: 50px;\n                                                                                    width: 100%;\n                                                                                    padding: 0 8px;\n                                                                                    color: var(--color-principal);\n                                                                                    // background-color: #e1f3f0;\n                                                                                    border: 2px solid #000;\n                                                                                    border-radius: 4px;\n                    \"></input>\n                </div>\n                <div style=\"\n                            display: flex;\n                            flex-direction: column;\n                            gap: 6px;\n                    \">\n                    <custom-text label=\"Room\" for=\"room-select\"></custom-text>    \n                    <select class=\"id\" name=\"rooms\" id=\"room-select\" style=\"\n                                                            box-sizing: border-box;\n                                                            font-size: 1.2rem;\n                                                            font-weight: 500;\n                                                            height: 50px;\n                                                            width: 100%;\n                                                            padding: 0 8px;\n                                                            color: var(--color-principal);\n                                                            // background-color: #e1f3f0;\n                                                            border: 2px solid #000;\n                                                            border-radius: 4px;\n                    \">\n                        <option value=\"\">--Elige una opción--</option>\n                        <option value=\"nuevo\">Nuevo room</option>\n                        <option value=\"existente\">Room existente</option>\n                    </select>\n                </div>\n                <div class=\"div-id\" style=\"\n                            display: flex;\n                            flex-direction: column;\n                            gap: 6px;\n                            visibility: hidden;\n                    \">\n                    <custom-text label=\"Room id:\"></custom-text>\n                    <input type=\"text\" name=\"id\" placeholder=\"Ingresa un id\" style=\"\n                                                                                    box-sizing: border-box;\n                                                                                    font-size: 1.2rem;\n                                                                                    font-weight: 500;\n                                                                                    height: 50px;\n                                                                                    width: 100%;\n                                                                                    padding: 0 8px;\n                                                                                    color: var(--color-principal);\n                                                                                    // background-color: #e1f3f0;\n                                                                                    border: 2px solid #000;\n                                                                                    border-radius: 4px;\n                    \"></input>\n                </div>\n                <button style=\"\n                    font-family: 'Roboto';\n                    font-size: 1.3rem;\n                    font-weight: 500;\n                    height: 50px;\n                    width: 100%;\n                    margin-top: 14px;\n                    color: #000;\n                    background-color: #9CBBE9;\n                    border: none;\n                    border-radius: 4px;\n        \">${btnText}</button>\n            </Form>\n        `\n\n        const formEl = this.shadowDom.querySelector(\".form\");\n        const idDiv:any = formEl.querySelector(\".id\")\n        const idEl:any = this.shadowDom.querySelector(\".div-id\")\n            idDiv.addEventListener('change', (e)=>{\n                const f = e.target as any;\n                if(f.value === 'existente'){\n                    idEl.style.visibility = 'visible'\n                }\n            })\n        formEl?.addEventListener(\"submit\", (e)=>{\n            e.preventDefault();\n            // const f = e.target as any;\n            // const value = f.text.value;\n            const data = new FormData(e.target as any);\n            const value = Object.fromEntries(data.entries());\n            console.log(value);\n            if(value.rooms === 'existente'){\n                state.setRoomId(value.id)\n                state.setUser(value.name, value.email)\n                state.authUser(()=>{\n                    state.getRoom()\n                })\n            } else {\n                state.setUser(value.name, value.email)\n                state.createUserInDB(()=>{\n                    state.createRoom()\n                })\n            }\n            // if (value !== \"\"){\n            //     this.shadowDom.innerHTML = `\n            //         <div style=\"\n            //                 display: flex;\n            //                 justify-content: center;\n            //                 align-items: center;\n            //                 gap: 8px;\n            //                 height: 50px;\n            //         \">\n            //             <h3 style=\"\n            //                     font-size: 1.8rem;\n            //                     margin: 0;\n            //                     color: var(--color-principal);\n            //             \">Nombre guardado</h3>\n            //         </div>\n            //     `\n            // }\n            // console.log(state.getState());\n        })\n    };\n}\ncustomElements.define(\"custom-form-u\", Form)","// import { state } from \"../../../state\"\nimport \"../../components/header/index\" \nimport \"../../components/text/index\"\nimport \"../../components/form-u/index\"\nimport { state } from \"../../state\";\n\n\nexport function initWelcome (params){\n    const div = document.createElement(\"div\");\n\n    // const currentState = state.getState();\n    div.innerHTML = `\n        <custom-header class=\"header-welcome\"></custom-header>\n        <div class=\"container\">\n            <custom-text class=\"text-welcome\" variant=\"title\" label=\"Bienvenido(a) al chat\"></custom-text>\n            <custom-form-u class=\"form-welcome\" label=\"Tu nombre:\" placeHolder=\"Ingresa tu nombre\" textBtn=\"Agregar\"></custom-form-u>\n            <button class=\"btn\">Comenzar</button>\n        </div>\n        `\n    div.className = \"root-welcome\";    \n\n    const btnEl = div.querySelector(\".btn\");\n    if(btnEl){\n        btnEl.addEventListener(\"click\", ()=>{\n            const currentState = state.getState()\n            if (currentState.user === \"\"){\n                // state.setUser(\"Usuario\")\n            }\n            params.goTo(\"/chat\")\n        })\n    }\n\n    return div;\n}","import { state } from \"../../state\";\nimport \"../text/index\";\n\nexport class Form extends HTMLElement {\n    shadowDom = this.attachShadow({mode: \"open\"});\n    constructor(){\n        super();\n        this.render();\n    }\n    render(){\n        const texto = this.getAttribute('label') || \"\";\n        const placeholder = this.getAttribute('placeHolder');\n        const btnText = this.getAttribute('textBtn');\n        this.shadowDom.innerHTML = `\n            <Form class=\"form\" style=\"\n                                display: flex;\n                                flex-direction: column;\n                                gap: 4px;\n                                padding: 4px;\n                                // border: solid 1px #000;\n                                border-radius: 4px;\n            \">\n                    <custom-text label=\"${texto}\"></custom-text>\n                    <div style=\"\n                            display:grid;\n                            grid-template-columns: 70% 1fr;\n                            gap: 5px;\n                    \">\n                    <input type=\"text\" name=\"text\" placeholder=\"${placeholder}\" style=\"\n                                                                                    box-sizing: border-box;\n                                                                                    font-size: 1.2rem;\n                                                                                    font-weight: 500;\n                                                                                    height: 50px;\n                                                                                    width: 100%;\n                                                                                    padding: 0 8px;\n                                                                                    color: var(--color-principal);\n                                                                                    // background-color: #e1f3f0;\n                                                                                    border: 1px solid #000;\n                                                                                    border-radius: 4px;\n                    \"></input>\n                    <button style=\"\n                                font-family: 'Roboto';\n                                font-size: 1.3rem;\n                                font-weight: 500;\n                                height: 50px;\n                                width: 100%;\n                                // margin-top: 14px;\n                                color: #000;\n                                background-color: #9CBBE9;\n                                border: none;\n                                border-radius: 4px;\n                    \">${btnText}</button>\n                    </div>\n            </Form>\n        `\n\n        const formEl = this.shadowDom.querySelector(\".form\");\n        formEl?.addEventListener(\"submit\", (e)=>{\n            e.preventDefault();\n            const f = e.target as any;\n            const value = f.text.value;\n            // console.log(value);\n            // if (value !== \"\"){\n            state.setMessage(value);\n            // state.setState({\n            //     ...state.getState(),\n            //     messages: value \n            // })\n                // };\n            console.log(state.getState());\n            f.text.value = \"\"\n        })\n    };\n}\ncustomElements.define(\"custom-form-m\", Form)","import { state } from \"../../state\"\n\ntype Message = {\n    user: string,\n    message: string\n}\n\nclass Chat extends HTMLElement {\n    connectedCallback(){\n        state.subscribe(()=>{\n            const currentState = state.getState();\n            // console.log(currentState);\n            this.messages = currentState;\n            // this.messages.user = currentState.user\n            console.log(currentState);\n            this.render();\n        })\n        this.render()\n        // state.init()\n    }\n\n    messages: Message[] = []\n\n    render(){\n        const currentState = state.getState();\n        this.messages = currentState;\n        console.log(this.messages);\n        // console.log(this.messages.map((m)=> m));\n        this.innerHTML = `\n        <div class=\"messages-container container2\" style=\"\n                                            display: flex;\n                                            flex-direction: column;\n                                            gap: 4px;\n                                            height: 100%;\n                                            padding: 10px 12px;\n                                            border-top: 1px solid;\n                                            overflow-y: auto;\n                                            // scroll-snap-type: y proximity;\n                                            // overscroll-behavior-y: contain;\n                                            // position : relative; \n                                            // bottom:0;\n                                            // z-index: -1;\n        \">\n            ${this.messages['messages'].map((msj)=>{\n                if(currentState.user === msj.user){\n                    return `\n                    <div class=\"div-uni-1\">\n                        <span class=\"span-1\">${msj.user || \"Usuario\"}</span>\n                        <div class=\"msjs-1\">${msj.message}</div>\n                    </div>\n                    `\n                }\n                else{\n                    return `\n                    <div class=\"div-uni-2\">\n                        <span>${msj.user || \"Usuario\"}</span>\n                        <div class=\"msjs-2\">${msj.message}</div>\n                    </div>\n                    `\n                }\n            }).join(\"\")}\n        </div>\n        `\n        // updateScroll()\n        // const element = document.querySelector(\".messages-container\");\n    }\n}\n\ncustomElements.define(\"custom-chat\", Chat)\n\n// function updateScroll(){\n//     const element = document.querySelector(\".messages-container\");\n//     element.scrollTop = element.scrollHeight - element.scrollHeight + 1;\n// }\n","// import { state } from \"../../../state\"\nimport \"../../components/header/index\" \nimport \"../../components/text/index\"\nimport \"../../components/form-m/index\"\nimport \"../../components/chat-container/index\"\nimport { state } from \"../../state\"\n\n\nexport function initChat (params){\n    // state.init()\n    const div = document.createElement(\"div\");\n    const currentState = state.getState()\n    // const currentState = state.getState();\n    div.innerHTML = `\n        <custom-header class=\"header-welcome\"></custom-header>\n        <div class=\"container-chat\">\n            <custom-text class=\"chat-title\" label=\"Chat\" variant=\"title\"></custom-text>\n            <label>Room id: ${currentState.roomId}</label>\n            <custom-chat class=\"messages-container\"></custom-chat>\n            <custom-form-m placeHolder=\"Ingresa un mensaje\" textBtn=\"Enviar\"></custom-form-m>\n            </div>\n            `\n            div.className = \"root-chat\"; \n            \n            // <button class=\"borrar\">borrar</button>\n    // const btnBorrar = div.querySelector(\".borrar\")\n    // btnBorrar.addEventListener('click', (e)=>{\n    //     e.preventDefault();\n    //     state.deleteMessage('-NPoF_v8_yQWG453f7Bg')\n    // })\n\n    return div;\n}","import { initWelcome } from \"../src/pages/welcome/index\";\nimport { initChat } from \"../src/pages/chat/index\";\n\nconst BASE_PATH = \"/chat-project\";\n\nfunction isGithubPages() {\n    return location.host.includes(\"github.io\");\n}\n\nexport function initRouter (container: Element | null){\n    function goTo(path){\n        const completePath = isGithubPages() ? BASE_PATH + path : path;\n        history.pushState({}, \"\", completePath);\n        handleRoute(completePath);\n    }\n\n    function handleRoute(route){\n        const newRoute = isGithubPages() ? route.replace(BASE_PATH, \"\") : route;\n        const routes = [\n            {\n                path: /\\/welcome/,\n                component: initWelcome\n            },\n            {\n                path: /\\/chat/,\n                component: initChat \n            }\n        ];\n        for(const r of routes){\n            if(r.path.test(route)){\n                \n                const el = r.component({ goTo: goTo });\n                if(container?.firstChild){\n                    container.firstChild.remove();\n                }\n                container?.appendChild(el);\n            }\n        }\n    }\n    if(location.pathname === \"/\" || location.host.includes(\"github.io\")){\n        goTo(\"/welcome\")\n    } else {\n        handleRoute(location.pathname);\n    }\n    window.onpopstate = function (){\n        handleRoute(location.pathname);\n    }\n}","// import { initWelcome } from \"./pages/welcome/index\"\nimport { initRouter } from \"./router\"\nimport { state } from \"./state\"\n\n(function(){\n    // state.init()\n    const container = document.querySelector(\".contenedor\");\n    initRouter(container)\n})()"],"names":["$23YZo","parcelRequire","freeExports","exports","nodeType","freeModule","module","Buffer","undefined","isBuffer","$fiQnm","$ljJ8G","$180b2bc3c0deaf6c$var$freeSelf","self","Object","$180b2bc3c0deaf6c$var$root","Function","$f84e62f9db5b9ccd$var$freeGlobal","$parcel$global","freeProcess","process","nodeUtil","types","require","binding","e","$b3d19b358d53baaf$export$8b251419efc915eb","HTMLElement","constructor","super","this","render","shadowDom","attachShadow","mode","div","document","createElement","style","backgroundColor","width","height","appendChild","customElements","define","$0c62e962cd892976$export$ec05282319889fc5","variant","getAttribute","label","span","innerHTML","className","textContent","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$exports","$cfae44f0dfdf62c0$var$defaultSetTimout","Error","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","call","clearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","length","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","cwd","chdir","dir","umask","$c38e0f42709c826a$export$588c7fdda06fbb0a","NODE_CLIENT","NODE_ADMIN","SDK_VERSION","$c38e0f42709c826a$export$a7a9523472993e97","assertion","message","$c38e0f42709c826a$export$a39cad550e7ab28a","stringToByteArray","str","out","p","c","charCodeAt","$c38e0f42709c826a$export$b3b2de96497acc47","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","$c38e0f42709c826a$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","$c38e0f42709c826a$export$e510a73ee562749","utf8Bytes","$c38e0f42709c826a$export$4b5284a3025a455","replace","$c38e0f42709c826a$export$c62426fdd000a97e","console","error","$c38e0f42709c826a$export$6c40052bed430212","value","$c38e0f42709c826a$export$54e9fb29908872fa","target","source","Date","getTime","prop","hasOwnProperty","$c38e0f42709c826a$var$getDefaultsFromGlobal","window","$c38e0f42709c826a$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$c38e0f42709c826a$export$212bb2fc580a90a8","$c38e0f42709c826a$var$getDefaultsFromEnvVariable","match","cookie","decoded","JSON","parse","$c38e0f42709c826a$var$getDefaultsFromCookie","info","$c38e0f42709c826a$export$a3febcf1f14a3a0c","productName","host","_a","_b","emulatorHosts","$c38e0f42709c826a$export$9c11895284c8adad","separatorIndex","lastIndexOf","port","parseInt","substring","$c38e0f42709c826a$export$3dfb6827a9f89756","config","$c38e0f42709c826a$export$85f6557964517f1a","reject","resolve","promise","Promise","wrapCallback","callback","catch","$c38e0f42709c826a$export$367bf224123348f1","token","projectId","uid","project","iat","sub","user_id","payload","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","$c38e0f42709c826a$export$c36915b22ce77c19","navigator","$c38e0f42709c826a$export$872f8323f01d7ae0","test","$c38e0f42709c826a$export$5d1d834fbbf8bab7","$c38e0f42709c826a$export$3865db50535c2055","indexedDB","$c38e0f42709c826a$export$dd24e9cd51226c56","code","customData","setPrototypeOf","captureStackTrace","$c38e0f42709c826a$export$3fa6e1b18a3b2d40","create","service","serviceName","errors","data","fullCode","template","$c38e0f42709c826a$var$PATTERN","_","key","$c38e0f42709c826a$var$replaceTemplate","fullMessage","$c38e0f42709c826a$export$c5a53ce6a17cf18d","$c38e0f42709c826a$export$fac44ee5b035f737","$c38e0f42709c826a$export$2f872c0f2117be69","header","claims","signature","parts","split","$c38e0f42709c826a$export$9565ca3d387f8aa0","$c38e0f42709c826a$export$fc970ed23da99565","$c38e0f42709c826a$export$2344b14b097df817","obj","$c38e0f42709c826a$export$e51ae4db7b428f67","$c38e0f42709c826a$export$dd1bc94b04021eeb","$c38e0f42709c826a$export$871de8747c9eaa88","fn","contextObj","res","$c38e0f42709c826a$export$9cb4719e2e525b7a","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","$c38e0f42709c826a$var$isObject","thing","$c38e0f42709c826a$export$ac4103b836844853","querystringParams","params","entries","forEach","arrayVal","encodeURIComponent","$c38e0f42709c826a$export$c85d589bf4e25fef","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","offset","W","t","f","d","update","lengthMinusBlock","n","inbuf","digest","totalBits","j","$c38e0f42709c826a$export$adea4917e02d93dc","fnName","argName","$c38e0f42709c826a$export$655666783217a925","high","$c38e0f42709c826a$export$9536dc0a75b20bf9","$c38e0f42709c826a$export$4befe9b5fa509a1b","_delegate","$a83e7ccd68ca8d4e$export$16fa2f45be04daa8","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","$a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME","$a83e7ccd68ca8d4e$export$2881499e37b75b9a","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","optional","getComponent","setComponent","$a83e7ccd68ca8d4e$var$isComponentEager","instanceDeferred","clearInstance","delete","async","services","from","values","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","$a83e7ccd68ca8d4e$export$436a80eea5d5c0c5","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","$45b460d9de9b230f$var$instances","$45b460d9de9b230f$export$243e62d78d3b544d","LogLevel","$45b460d9de9b230f$var$levelStringToEnum","debug","DEBUG","verbose","VERBOSE","INFO","warn","WARN","ERROR","silent","SILENT","$45b460d9de9b230f$var$defaultLogLevel","$45b460d9de9b230f$var$ConsoleMethod","$45b460d9de9b230f$var$defaultLogHandler","logType","logLevel","now","toISOString","method","$45b460d9de9b230f$export$efa9a398d6368992","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","log","$e67bf383372d72f4$export$23f2a1d2818174ef","object","constructors","some","$e67bf383372d72f4$var$idbProxyableTypes","$e67bf383372d72f4$var$cursorAdvanceMethods","$e67bf383372d72f4$var$cursorRequestMap","WeakMap","$e67bf383372d72f4$var$transactionDoneMap","$e67bf383372d72f4$var$transactionStoreNamesMap","$e67bf383372d72f4$var$transformCache","$e67bf383372d72f4$export$407448d2b89b1813","$e67bf383372d72f4$var$idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","$e67bf383372d72f4$export$efccba1c4a2ef57b","$e67bf383372d72f4$var$wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","$e67bf383372d72f4$export$3b14a55fb2447963","storeNames","tx","sort","$e67bf383372d72f4$var$transformCachableValue","done","unlisten","removeEventListener","complete","DOMException","addEventListener","$e67bf383372d72f4$var$cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","request","success","result","then","$e67bf383372d72f4$var$promisifyRequest","newValue","$da032767b57a4aa4$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","open","openPromise","event","oldVersion","newVersion","db","$da032767b57a4aa4$var$readMethods","$da032767b57a4aa4$var$writeMethods","$da032767b57a4aa4$var$cachedMethods","$da032767b57a4aa4$var$getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","oldTraps","$57d436074e210fb5$var$PlatformLoggerServiceImpl","getPlatformInfoString","$57d436074e210fb5$var$isVersionServiceProvider","library","logString","$57d436074e210fb5$var$logger","$57d436074e210fb5$export$9f30fa0c10967f7f","$57d436074e210fb5$var$PLATFORM_LOG_STRING","$57d436074e210fb5$var$name$o","appName","$57d436074e210fb5$export$b4e3c36c855b14b5","$57d436074e210fb5$export$9566bce3835c0f28","$57d436074e210fb5$export$fa5244b94c62d36a","app","$57d436074e210fb5$export$c930050e7bb63965","componentName","$57d436074e210fb5$export$fa0d6da0f5838f50","heartbeatController","triggerHeartbeat","$57d436074e210fb5$var$ERROR_FACTORY","$57d436074e210fb5$var$FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","$57d436074e210fb5$export$31499a9cd224b78c","$57d436074e210fb5$export$c55cfd413944906d","rawConfig","existingApp","newApp","$57d436074e210fb5$export$f9962582c9e66d99","$57d436074e210fb5$export$d29d5299a7137abc","libraryKeyOrName","libraryMismatch","versionMismatch","warning","$57d436074e210fb5$var$DB_NAME","$57d436074e210fb5$var$DB_VERSION","$57d436074e210fb5$var$STORE_NAME","$57d436074e210fb5$var$dbPromise","$57d436074e210fb5$var$getDbPromise","createObjectStore","originalErrorMessage","$57d436074e210fb5$var$writeHeartbeatsToIndexedDB","heartbeatObject","put","$57d436074e210fb5$var$computeKey","idbGetError","appId","$57d436074e210fb5$var$MAX_HEADER_BYTES","$57d436074e210fb5$var$HeartbeatServiceImpl","_heartbeatsCache","_storage","$57d436074e210fb5$var$HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","$57d436074e210fb5$var$getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","$57d436074e210fb5$var$countBytes","pop","$57d436074e210fb5$var$extractHeartbeatsForHeader","headerString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","$57d436074e210fb5$var$readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","$da38ac6aa733c404$var$SDK_VERSION","$da38ac6aa733c404$var$DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","remove","toString","$da38ac6aa733c404$var$MemoryStorage","cache_","isInMemoryStorage","$da38ac6aa733c404$var$createStoragefor","domStorageName","domStorage","$da38ac6aa733c404$var$PersistentStorage","$da38ac6aa733c404$var$SessionStorage","$da38ac6aa733c404$var$logClient","$da38ac6aa733c404$var$LUIDGenerator","id","$da38ac6aa733c404$var$sha1","sha1","sha1Bytes","$da38ac6aa733c404$var$buildLogMessage_","varArgs","arg","$da38ac6aa733c404$var$logger","$da38ac6aa733c404$var$firstLog_","enableLogging","logger_","persistent","bind","$da38ac6aa733c404$var$log","$da38ac6aa733c404$var$logWrapper","prefix","$da38ac6aa733c404$var$error","$da38ac6aa733c404$var$fatal","$da38ac6aa733c404$var$warn","$da38ac6aa733c404$var$isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","$da38ac6aa733c404$var$MIN_NAME","$da38ac6aa733c404$var$MAX_NAME","$da38ac6aa733c404$var$nameCompare","aAsInt","$da38ac6aa733c404$var$tryParseInt","bAsInt","$da38ac6aa733c404$var$stringCompare","$da38ac6aa733c404$var$requireKey","$da38ac6aa733c404$var$ObjectToUniqueKey","$da38ac6aa733c404$var$splitStringBySize","segsize","dataSegs","$da38ac6aa733c404$var$each","$da38ac6aa733c404$var$doubleToIEEE754String","v","bias","s","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","hexByteString","hexByte","substr","toLowerCase","$da38ac6aa733c404$var$INTEGER_REGEXP_","RegExp","intVal","$da38ac6aa733c404$var$exceptionGuard","stack","$da38ac6aa733c404$var$beingCrawled","search","$da38ac6aa733c404$var$setTimeoutNonBlocking","time","Deno","unrefTimer","$da38ac6aa733c404$var$AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getToken","forceRefresh","addTokenChangeListener","listener","addTokenListener","notifyForInvalidToken","$da38ac6aa733c404$var$FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","$da38ac6aa733c404$var$EmulatorTokenProvider","accessToken","OWNER","$da38ac6aa733c404$var$PROTOCOL_VERSION","$da38ac6aa733c404$var$FORGE_DOMAIN_RE","$da38ac6aa733c404$var$APP_CHECK_TOKEN_PARAM","$da38ac6aa733c404$var$WEBSOCKET","$da38ac6aa733c404$var$LONG_POLLING","$da38ac6aa733c404$var$RepoInfo","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","newHost","toURLString","protocol","query","$da38ac6aa733c404$var$repoInfoConnectionURL","repoInfo","connURL","$da38ac6aa733c404$var$repoInfoNeedsQueryParam","pairs","$da38ac6aa733c404$var$StatsCollection","counters_","incrementCounter","amount","$da38ac6aa733c404$var$collections","$da38ac6aa733c404$var$reporters","$da38ac6aa733c404$var$statsManagerGetCollection","hashString","$da38ac6aa733c404$var$PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","toProcess","$da38ac6aa733c404$var$FIREBASE_LONGPOLL_START_PARAM","$da38ac6aa733c404$var$BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called","wrappedFn","body","attachEvent","$da38ac6aa733c404$var$executeWhenDOMReady","scriptTagHolder","$da38ac6aa733c404$var$FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","static","forceAllow_","forceDisallow_","href","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","removeChild","send","dataStr","base64data","$da38ac6aa733c404$var$MAX_URL_DATA_SIZE","enqueueSegment","pw","src","display","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","myID","myPW","newRequest_","size","theURL","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript","onload","onreadystatechange","rstate","parentNode","$da38ac6aa733c404$var$WebSocketImpl","MozWebSocket","WebSocket","$da38ac6aa733c404$var$WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","platform","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","userAgent","oldAndroidRegex","oldAndroidMatch","parseFloat","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","$da38ac6aa733c404$var$TransportManager","initTransports_","ALL_TRANSPORTS","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","transport","initialTransport","upgradeTransport","$da38ac6aa733c404$var$Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","h","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","$da38ac6aa733c404$var$ServerActions","pathString","onComplete","hash","merge","refreshAuthToken","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","$da38ac6aa733c404$var$EventEmitter","allowedEvents_","listeners_","trigger","eventType","context","validateEventType_","eventData","getInitialEvent","splice","et","$da38ac6aa733c404$var$OnlineMonitor","online_","currentlyOnline","$da38ac6aa733c404$var$MAX_PATH_DEPTH","$da38ac6aa733c404$var$MAX_PATH_LENGTH_BYTES","$da38ac6aa733c404$var$Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","$da38ac6aa733c404$var$newEmptyPath","$da38ac6aa733c404$var$pathGetFront","path","$da38ac6aa733c404$var$pathGetLength","$da38ac6aa733c404$var$pathPopFront","$da38ac6aa733c404$var$pathGetBack","$da38ac6aa733c404$var$pathSlice","begin","$da38ac6aa733c404$var$pathParent","pieces","$da38ac6aa733c404$var$pathChild","childPathObj","childPieces","$da38ac6aa733c404$var$pathIsEmpty","$da38ac6aa733c404$var$newRelativePath","outerPath","innerPath","outer","inner","$da38ac6aa733c404$var$pathEquals","other","$da38ac6aa733c404$var$pathContains","$da38ac6aa733c404$var$ValidationPath","errorPrefix_","parts_","byteLength_","max","$da38ac6aa733c404$var$validationPathCheckValid","validationPath","$da38ac6aa733c404$var$validationPathToErrorString","$da38ac6aa733c404$var$VisibilityMonitor","hidden","visibilityChange","visible_","visible","$da38ac6aa733c404$var$RECONNECT_MIN_DELAY","$da38ac6aa733c404$var$PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","getInstance","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","outstandingGet","_path","q","_queryObject","sendGet_","listen","currentHashFn","tag","queryId","_queryIdentifier","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","authMethod","requestData","cred","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","interrupt","resume","delta","serverTimeOffset","normalizedPathString","statusCode","explanation","queries","clientName","$da38ac6aa733c404$var$NamedNode","node","$da38ac6aa733c404$var$Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","$da38ac6aa733c404$var$__EMPTY_NODE","$da38ac6aa733c404$var$KeyIndex","__EMPTY_NODE","isDefinedOn","maxPost","makePost","indexValue","$da38ac6aa733c404$var$KEY_INDEX","$da38ac6aa733c404$var$SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","cmp","isEmpty","left","right","getNext","hasNext","peek","$da38ac6aa733c404$var$LLRBNode","color","RED","$da38ac6aa733c404$var$SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","$da38ac6aa733c404$var$NAME_ONLY_COMPARATOR","$da38ac6aa733c404$var$NAME_COMPARATOR","MAX_NODE","$da38ac6aa733c404$var$priorityHashText","priority","$da38ac6aa733c404$var$validatePriorityNode","priorityNode","isLeafNode","getPriority","$da38ac6aa733c404$var$__childrenNodeConstructor","nodeFromJSON","$da38ac6aa733c404$var$LeafNode","value_","priorityNode_","__childrenNodeConstructor","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","$da38ac6aa733c404$var$PRIORITY_INDEX","aPriority","bPriority","indexCmp","$da38ac6aa733c404$var$LOG_2","$da38ac6aa733c404$var$Base12Num","num","current_","mask","bits_","nextBitIsOne","$da38ac6aa733c404$var$buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","$da38ac6aa733c404$var$_defaultIndexMap","$da38ac6aa733c404$var$fallbackObject","$da38ac6aa733c404$var$IndexMap","indexes_","indexSet_","Default","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","Wrap","newIndex","next","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","$da38ac6aa733c404$var$EMPTY_NODE","$da38ac6aa733c404$var$ChildrenNode","children_","indexMap_","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","INTEGER_REGEXP_","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","$da38ac6aa733c404$var$MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","defineProperties","MAX","setPriorityMaxNode","$da38ac6aa733c404$var$USE_HINZE","$da38ac6aa733c404$var$nodeFromJSON","json","childData","children","childrenHavePriority","childSet","sortedChildSet","$da38ac6aa733c404$var$setNodeFromJSON","$da38ac6aa733c404$var$PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","$da38ac6aa733c404$var$VALUE_INDEX","$da38ac6aa733c404$var$changeValue","snapshotNode","$da38ac6aa733c404$var$changeChildAdded","$da38ac6aa733c404$var$changeChildRemoved","$da38ac6aa733c404$var$changeChildChanged","oldSnap","$da38ac6aa733c404$var$IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","$da38ac6aa733c404$var$RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startIsInclusive_","startAfterSet_","endIsInclusive_","endBeforeSet_","getStartPost","getEndPost","matches","isWithinStart","isWithinEnd","filtered","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","$da38ac6aa733c404$var$LimitedFilter","withinDirectionalStart","reverse_","withinEndPost","withinStartPost","withinDirectionalEnd","compareRes","rangedFilter_","limit_","getLimit","isViewFromLeft","fullLimitUpdateChild_","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","$da38ac6aa733c404$export$7ba287e361c94330","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasLimit","hasAnchoredLimit","$da38ac6aa733c404$var$queryParamsToRestQueryStringParameters","queryParams","qs","orderBy","startParam","endParam","$da38ac6aa733c404$var$queryParamsGetQueryObject","viewFrom","$da38ac6aa733c404$var$ReadonlyRestClient","listens_","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","$da38ac6aa733c404$var$SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","$da38ac6aa733c404$var$newSparseSnapshotTree","$da38ac6aa733c404$var$sparseSnapshotTreeRemember","sparseSnapshotTree","clear","$da38ac6aa733c404$var$sparseSnapshotTreeForEachTree","prefixPath","tree","$da38ac6aa733c404$var$sparseSnapshotTreeForEachChild","$da38ac6aa733c404$var$StatsListener","collection_","last_","newStats","stat","$da38ac6aa733c404$var$StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","$da38ac6aa733c404$var$OperationType","OperationType","$da38ac6aa733c404$var$newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","$da38ac6aa733c404$var$AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","$da38ac6aa733c404$var$ListenComplete","LISTEN_COMPLETE","$da38ac6aa733c404$var$Overwrite","OVERWRITE","$da38ac6aa733c404$var$Merge","MERGE","$da38ac6aa733c404$var$CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","$da38ac6aa733c404$var$EventGenerator","query_","$da38ac6aa733c404$var$eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","change","aWrapped","bWrapped","$da38ac6aa733c404$var$eventGeneratorCompareChanges","materializedChange","prevName","$da38ac6aa733c404$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","$da38ac6aa733c404$var$newViewCache","serverCache","$da38ac6aa733c404$var$viewCacheUpdateEventSnap","viewCache","eventSnap","$da38ac6aa733c404$var$viewCacheUpdateServerSnap","serverSnap","$da38ac6aa733c404$var$viewCacheGetCompleteEventSnap","$da38ac6aa733c404$var$viewCacheGetCompleteServerSnap","$da38ac6aa733c404$var$emptyChildrenSingleton","$da38ac6aa733c404$var$ImmutableTree","$da38ac6aa733c404$var$EmptyChildren","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","$da38ac6aa733c404$var$CompoundWrite","writeTree_","$da38ac6aa733c404$var$compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","$da38ac6aa733c404$var$compoundWriteAddWrites","updates","newWrite","$da38ac6aa733c404$var$compoundWriteRemoveWrite","empty","$da38ac6aa733c404$var$compoundWriteHasCompleteWrite","$da38ac6aa733c404$var$compoundWriteGetCompleteNode","$da38ac6aa733c404$var$compoundWriteGetCompleteChildren","$da38ac6aa733c404$var$compoundWriteChildCompoundWrite","shadowingNode","$da38ac6aa733c404$var$compoundWriteIsEmpty","$da38ac6aa733c404$var$compoundWriteApply","$da38ac6aa733c404$var$applySubtreeWrite","writeTree","priorityWrite","$da38ac6aa733c404$var$writeTreeChildWrites","$da38ac6aa733c404$var$newWriteTreeRef","$da38ac6aa733c404$var$writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","$da38ac6aa733c404$var$writeTreeRecordContainsPath_","visibleWrites","$da38ac6aa733c404$var$writeTreeLayerTree_","$da38ac6aa733c404$var$writeTreeDefaultFilter_","lastWriteId","$da38ac6aa733c404$var$writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","$da38ac6aa733c404$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","$da38ac6aa733c404$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$da38ac6aa733c404$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$da38ac6aa733c404$var$writeTreeCalcCompleteEventChildren","$da38ac6aa733c404$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$da38ac6aa733c404$var$writeTreeCalcEventCacheAfterServerOverwrite","$da38ac6aa733c404$var$writeTreeRefShadowingWrite","$da38ac6aa733c404$var$writeTreeShadowingWrite","$da38ac6aa733c404$var$writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","$da38ac6aa733c404$var$writeTreeCalcIndexedSlice","$da38ac6aa733c404$var$writeTreeRefCalcCompleteChild","existingServerCache","$da38ac6aa733c404$var$writeTreeCalcCompleteChild","$da38ac6aa733c404$var$writeTreeRefChild","$da38ac6aa733c404$var$ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","$da38ac6aa733c404$var$NO_COMPLETE_CHILD_SOURCE","getCompleteChild","$da38ac6aa733c404$var$WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","$da38ac6aa733c404$var$viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","accumulator","newViewCache","filterServerNode","$da38ac6aa733c404$var$viewProcessorApplyUserOverwrite","$da38ac6aa733c404$var$viewProcessorApplyServerOverwrite","changedChildren","curViewCache","$da38ac6aa733c404$var$viewProcessorCacheHasChild","$da38ac6aa733c404$var$viewProcessorApplyUserMerge","$da38ac6aa733c404$var$viewProcessorApplyServerMerge","ackUserWrite","serverChildren","$da38ac6aa733c404$var$viewProcessorRevertUserWrite","ackPath","mergePath","serverCachePath","$da38ac6aa733c404$var$viewProcessorAckUserWrite","oldServerNode","$da38ac6aa733c404$var$viewProcessorGenerateEventCacheAfterServerEvent","$da38ac6aa733c404$var$viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","$da38ac6aa733c404$var$viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","$da38ac6aa733c404$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$da38ac6aa733c404$var$View","initialViewCache","eventRegistrations_","indexFilter","processor_","$da38ac6aa733c404$var$newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","$da38ac6aa733c404$var$viewGetCompleteServerCache","view","cache","$da38ac6aa733c404$var$viewIsEmpty","$da38ac6aa733c404$var$viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","$da38ac6aa733c404$var$viewApplyOperation","$da38ac6aa733c404$var$viewGenerateEventsForChanges_","eventRegistrations","moves","$da38ac6aa733c404$var$eventGeneratorGenerateEventsForChanges","referenceConstructor","$da38ac6aa733c404$var$referenceConstructor","$da38ac6aa733c404$var$SyncPoint","views","$da38ac6aa733c404$var$syncPointApplyOperation","syncPoint","optCompleteServerCache","$da38ac6aa733c404$var$syncPointGetView","serverCacheComplete","eventCacheComplete","$da38ac6aa733c404$var$syncPointAddEventRegistration","$da38ac6aa733c404$var$viewAddEventRegistration","initialChanges","$da38ac6aa733c404$var$viewGetInitialEvents","$da38ac6aa733c404$var$syncPointRemoveEventRegistration","removed","hadCompleteView","$da38ac6aa733c404$var$syncPointHasCompleteView","viewQueryId","_repo","$da38ac6aa733c404$var$syncPointGetQueryViews","$da38ac6aa733c404$var$syncPointGetCompleteServerCache","$da38ac6aa733c404$var$syncPointViewForQuery","$da38ac6aa733c404$var$syncPointGetCompleteView","$da38ac6aa733c404$var$syncPointViewExistsForQuery","$da38ac6aa733c404$var$syncTreeNextQueryTag_","$da38ac6aa733c404$var$SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","$da38ac6aa733c404$var$syncTreeApplyUserOverwrite","syncTree","newData","$da38ac6aa733c404$var$writeTreeAddOverwrite","$da38ac6aa733c404$var$syncTreeApplyOperationToSyncPoints_","$da38ac6aa733c404$var$syncTreeAckUserWrite","record","$da38ac6aa733c404$var$writeTreeGetWrite","$da38ac6aa733c404$var$syncTreeApplyServerOverwrite","$da38ac6aa733c404$var$syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","_key","childViews","$da38ac6aa733c404$var$syncTreeCollectDistinctViewsForSubTree_","newQuery","$da38ac6aa733c404$var$syncTreeCreateListenerForView_","startListening","$da38ac6aa733c404$var$syncTreeQueryForListening_","$da38ac6aa733c404$var$syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","$da38ac6aa733c404$var$syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","$da38ac6aa733c404$var$syncTreeRemoveTags_","$da38ac6aa733c404$var$syncTreeApplyTaggedQueryOverwrite","queryKey","$da38ac6aa733c404$var$syncTreeQueryKeyForTag_","$da38ac6aa733c404$var$syncTreeParseQueryKey_","queryPath","$da38ac6aa733c404$var$syncTreeApplyTaggedOperation_","$da38ac6aa733c404$var$syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queriesToStop","childQueries","queryToStop","$da38ac6aa733c404$var$syncTreeSetupListener_","$da38ac6aa733c404$var$syncTreeCalcCompleteEventCache","$da38ac6aa733c404$var$syncTreeApplyOperationHelper_","syncPointTree","$da38ac6aa733c404$var$syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","$da38ac6aa733c404$var$viewGetServerCache","$da38ac6aa733c404$var$syncTreeApplyTaggedListenComplete","$da38ac6aa733c404$var$syncTreeApplyListenComplete","toUpperCase","$da38ac6aa733c404$var$errorForServerCode","splitIndex","$da38ac6aa733c404$var$ExistingValueProvider","$da38ac6aa733c404$var$DeferredValueProvider","syncTree_","path_","$da38ac6aa733c404$var$generateWithValues","$da38ac6aa733c404$var$resolveDeferredLeafValue","existingVal","serverValues","$da38ac6aa733c404$var$resolveScalarDeferredValue","$da38ac6aa733c404$var$resolveComplexDeferredValue","op","unused","existingNode","$da38ac6aa733c404$var$resolveDeferredValueTree","$da38ac6aa733c404$var$resolveDeferredValue","$da38ac6aa733c404$var$resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","$da38ac6aa733c404$var$Tree","parent","childCount","$da38ac6aa733c404$var$treeSubTree","pathObj","$da38ac6aa733c404$var$treeGetValue","$da38ac6aa733c404$var$treeSetValue","$da38ac6aa733c404$var$treeUpdateParents","$da38ac6aa733c404$var$treeHasChildren","$da38ac6aa733c404$var$treeForEachChild","$da38ac6aa733c404$var$treeForEachDescendant","includeSelf","childrenFirst","$da38ac6aa733c404$var$treeGetPath","childEmpty","$da38ac6aa733c404$var$treeIsEmpty","childExists","$da38ac6aa733c404$var$treeUpdateChild","$da38ac6aa733c404$var$INVALID_KEY_REGEX_","$da38ac6aa733c404$var$INVALID_PATH_REGEX_","$da38ac6aa733c404$var$MAX_LEAF_SIZE_","$da38ac6aa733c404$var$isValidKey","$da38ac6aa733c404$var$isValidPathString","$da38ac6aa733c404$var$validateFirebaseData","errorPrefix","hasDotValue","hasActualChild","last","$da38ac6aa733c404$var$validationPathPop","$da38ac6aa733c404$export$8637b026ace8abb1","argumentName","errorPrefixFxn","$da38ac6aa733c404$var$validateRootPathString","$da38ac6aa733c404$var$validateUrl","parsedUrl","$da38ac6aa733c404$var$isValidRootPathString","$da38ac6aa733c404$var$EventQueue","eventLists_","recursionDepth_","$da38ac6aa733c404$var$eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","$da38ac6aa733c404$var$eventQueueRaiseEventsAtPath","$da38ac6aa733c404$var$eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","$da38ac6aa733c404$var$eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","$da38ac6aa733c404$var$eventListRaise","eventFn","getEventRunner","$da38ac6aa733c404$var$INTERRUPT_REASON","$da38ac6aa733c404$var$MAX_TRANSACTION_RETRIES","$da38ac6aa733c404$var$Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","$da38ac6aa733c404$var$repoStart","repo","authOverride","isMerge","$da38ac6aa733c404$var$repoOnDataUpdate","$da38ac6aa733c404$var$repoOnConnectStatus","connectStatus","$da38ac6aa733c404$var$repoUpdateInfo","$da38ac6aa733c404$var$repoOnServerInfoUpdate","statsReporter_","creatorFunction","$da38ac6aa733c404$var$statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","$da38ac6aa733c404$var$repoServerTime","$da38ac6aa733c404$var$repoGenerateServerValues","taggedChildren","raw","changeTree","fromObject","$da38ac6aa733c404$var$syncTreeApplyTaggedQueryMerge","taggedSnap","$da38ac6aa733c404$var$syncTreeApplyServerMerge","$da38ac6aa733c404$var$repoRerunTransactions","$da38ac6aa733c404$var$repoLog","resolvedOnDisconnectTree","resolved","$da38ac6aa733c404$var$repoAbortTransactions","$da38ac6aa733c404$var$repoRunOnDisconnectEvents","$da38ac6aa733c404$var$repoGetNextWriteId","$da38ac6aa733c404$var$repoRemoveEventCallbackForQuery","$da38ac6aa733c404$var$repoInterrupt","$da38ac6aa733c404$var$repoGetLatestState","excludeSets","$da38ac6aa733c404$var$repoSendReadyTransactions","$da38ac6aa733c404$var$repoPruneCompletedTransactionsBelowNode","queue","$da38ac6aa733c404$var$repoBuildTransactionQueue","every","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","currentOutputSnapshotResolved","unwatcher","abortReason","$da38ac6aa733c404$var$repoSendTransactionQueue","rootMostTransactionNode","$da38ac6aa733c404$var$repoGetAncestorTransactionNode","txnsToRerun","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","$da38ac6aa733c404$var$repoRerunTransactionQueue","transactionNode","transactionQueue","$da38ac6aa733c404$var$repoAggregateTransactionQueuesForNode","order","nodeQueue","to","$da38ac6aa733c404$var$treeForEachAncestor","$da38ac6aa733c404$var$repoAbortTransactionsOnNode","lastSent","$da38ac6aa733c404$var$parseRepoInfo","dataURL","$da38ac6aa733c404$var$parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","$da38ac6aa733c404$var$decodePath","queryString","results","segment","kv","$da38ac6aa733c404$var$decodeQuery","hostWithoutPort","dotInd","$da38ac6aa733c404$var$PUSH_CHARS","lastPushTime","lastRandChars","$da38ac6aa733c404$var$DataEvent","snapshot","ref","getEventType","exportVal","$da38ac6aa733c404$var$CancelEvent","$da38ac6aa733c404$var$CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","$da38ac6aa733c404$export$e79c8d837d2220a8","_orderByCalled","$da38ac6aa733c404$export$35c3a5e7c9d1033c","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","$da38ac6aa733c404$var$pathToUrlEncodedString","parentPath","$da38ac6aa733c404$export$80b98bcbc246c942","_node","_index","childRef","$da38ac6aa733c404$export$f9574b70e1d95d9d","exists","hasChildren","$da38ac6aa733c404$export$eff4d24c3ff7876e","_checkNotDeleted","_root","$da38ac6aa733c404$var$ValueEventRegistration","callbackContext","$da38ac6aa733c404$var$ChildEventRegistration","eventToCheck","$da38ac6aa733c404$var$addEventListener","cancelCallbackOrListenOptions","onlyOnce","onceCallback","dataSnapshot","$da38ac6aa733c404$var$repoAddEventCallbackForQuery","$da38ac6aa733c404$export$ad30f661f41f4d90","$da38ac6aa733c404$var$syncPointSetReferenceConstructor","$da38ac6aa733c404$var$syncTreeSetReferenceConstructor","$da38ac6aa733c404$var$FIREBASE_DATABASE_EMULATOR_HOST_VAR","$da38ac6aa733c404$var$repos","$da38ac6aa733c404$var$useRestClient","$da38ac6aa733c404$export$a248c1d2ea757674","authProvider","dbUrl","databaseURL","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","$da38ac6aa733c404$var$repoManagerCreateRepo","$da38ac6aa733c404$export$6feb5ea51a7b0b47","_repoInternal","_instanceStarted","_rootInternal","$da38ac6aa733c404$var$repoManagerDeleteRepo","apiName","simpleListen","echo","onEcho","$da38ac6aa733c404$var$name","$da38ac6aa733c404$var$version","$da38ac6aa733c404$var$registerDatabase","apiKey","authDomain","$310237b6a0051c0d$export$ee53864b2dbef9f9","emulator","tokenProvider","mockUserToken","$da38ac6aa733c404$var$repoManagerApplyEmulatorSettings","$da38ac6aa733c404$export$87f3cfc4a2e3958d","$d26d80da1ba3948c$exports","iteratee","$83df40714bf7006e$exports","__data__","$50557587dab070a0$exports","$87257b05f5d9ad81$exports","$d22fe27824ff9351$var$splice","$d22fe27824ff9351$exports","$b2e6263d81cdc1b3$exports","$29e2bc7b7348833e$exports","$dd14efc87ba1cd5b$var$ListCache","entry","$ff9311500b60ab72$exports","$dd14efc87ba1cd5b$exports","$e8ee1d354807980a$exports","$b2ddb9d63293f3a5$exports","$80d0940a423a17dc$exports","$010f38d5d914cfa2$exports","$3ba72ebe7e4419b5$exports","Symbol","$dabe9ecbecc6d0b5$var$objectProto","$dabe9ecbecc6d0b5$var$hasOwnProperty","$dabe9ecbecc6d0b5$var$nativeObjectToString","$dabe9ecbecc6d0b5$var$symToStringTag","toStringTag","$dabe9ecbecc6d0b5$exports","isOwn","unmasked","$3fce91ec3914aaed$var$nativeObjectToString","$3fce91ec3914aaed$exports","$a7f8a2555793d7d3$var$nullTag","$a7f8a2555793d7d3$var$undefinedTag","$a7f8a2555793d7d3$var$symToStringTag","$a7f8a2555793d7d3$exports","$f9ff2e983beb6b86$exports","$004783abbde551e4$var$asyncTag","$004783abbde551e4$var$funcTag","$004783abbde551e4$var$genTag","$004783abbde551e4$var$proxyTag","$004783abbde551e4$exports","$baf78e1246b3b18f$var$coreJsData","$5e8d211f630cd46d$var$maskSrcKey","exec","$baf78e1246b3b18f$exports","IE_PROTO","$5e8d211f630cd46d$exports","$9c6b3ec69362487e$var$funcToString","$9c6b3ec69362487e$exports","$8360225fb63098b3$var$reIsHostCtor","$8360225fb63098b3$var$funcProto","$8360225fb63098b3$var$objectProto","$8360225fb63098b3$var$funcToString","$8360225fb63098b3$var$hasOwnProperty","$8360225fb63098b3$var$reIsNative","$8360225fb63098b3$exports","$d50b255f8680c47a$exports","$19b02faa57603249$var$Map","$5037fd2e597c2a03$exports","$19b02faa57603249$exports","$e95343b7bf5d617b$var$nativeCreate","$e95343b7bf5d617b$exports","$80f20c637ba11563$exports","$60a2188452e03a76$exports","$0ade0ffa62051a98$var$HASH_UNDEFINED","$0ade0ffa62051a98$var$hasOwnProperty","$0ade0ffa62051a98$exports","$0d7f9677a17b6bef$var$hasOwnProperty","$0d7f9677a17b6bef$exports","$d33db65186b62952$var$HASH_UNDEFINED","$8d50e526a9e9b7fa$var$Hash","$d33db65186b62952$exports","$8d50e526a9e9b7fa$exports","$df2cd4bc93f21548$exports","string","$09c4668903e66c1d$exports","$c0b23e5f03c2595b$exports","$44464964ade29765$exports","$ba80406da5503086$exports","$d3abe18ea687dfb7$exports","$4902f64a16640324$var$MapCache","$347643e3dcfcc207$exports","$4902f64a16640324$exports","$9280d00f89f25fa9$var$LARGE_ARRAY_SIZE","$bbb2d98cae25b61a$var$Stack","$9280d00f89f25fa9$exports","$bbb2d98cae25b61a$exports","$dda8f7b6b589544e$var$HASH_UNDEFINED","$dda8f7b6b589544e$exports","$a29ccdc0f60e279e$var$SetCache","$66732c92c350622c$exports","$a29ccdc0f60e279e$exports","$aae24ad60cc3cfcb$exports","$1b44096ad4b9e2d5$exports","$1081bd3a2e361911$var$COMPARE_PARTIAL_FLAG","$1081bd3a2e361911$var$COMPARE_UNORDERED_FLAG","$1081bd3a2e361911$exports","bitmask","customizer","equalFunc","isPartial","arrLength","othLength","arrStacked","othStacked","seen","arrValue","othValue","compared","othIndex","$facf83d1449a27b8$var$Uint8Array","Uint8Array","$facf83d1449a27b8$exports","$91d4444cbb077e0c$exports","$11f509f8f53d8c36$exports","$baf52b9e146f3da7$var$COMPARE_PARTIAL_FLAG","$baf52b9e146f3da7$var$COMPARE_UNORDERED_FLAG","$baf52b9e146f3da7$var$boolTag","$baf52b9e146f3da7$var$dateTag","$baf52b9e146f3da7$var$errorTag","$baf52b9e146f3da7$var$mapTag","$baf52b9e146f3da7$var$numberTag","$baf52b9e146f3da7$var$regexpTag","$baf52b9e146f3da7$var$setTag","$baf52b9e146f3da7$var$stringTag","$baf52b9e146f3da7$var$symbolTag","$baf52b9e146f3da7$var$arrayBufferTag","$baf52b9e146f3da7$var$dataViewTag","$baf52b9e146f3da7$var$symbolProto","$baf52b9e146f3da7$var$symbolValueOf","$baf52b9e146f3da7$exports","byteLength","byteOffset","buffer","convert","stacked","$cc77dbb7c08db6a8$exports","$0488fde9aa355453$var$isArray","$0488fde9aa355453$exports","$9144d49da7a47a72$exports","keysFunc","symbolsFunc","$6549fed720324048$exports","resIndex","$8fc9f7df9b0c06bb$exports","$51326a29f571e7cd$var$propertyIsEnumerable","propertyIsEnumerable","$51326a29f571e7cd$var$nativeGetSymbols","getOwnPropertySymbols","$51326a29f571e7cd$exports","symbol","$b14d62a510ae7f2d$exports","$61269cf1f3e020be$exports","$fb8f823cdc90f511$var$argsTag","$fb8f823cdc90f511$exports","$7d0c6fd0eb26be0e$var$objectProto","$7d0c6fd0eb26be0e$var$hasOwnProperty","$7d0c6fd0eb26be0e$var$propertyIsEnumerable","$7d0c6fd0eb26be0e$var$isArguments","$7d0c6fd0eb26be0e$exports","$d83738e053b5eb08$var$MAX_SAFE_INTEGER","$d83738e053b5eb08$var$reIsUint","$d83738e053b5eb08$exports","$15d215b19bcf1187$var$MAX_SAFE_INTEGER","$15d215b19bcf1187$exports","$9d076681a0e29d68$var$typedArrayTags","$9d076681a0e29d68$exports","$692cb5474f422969$exports","$156c3727697ab085$var$nodeIsTypedArray","$jIny1","isTypedArray","$156c3727697ab085$var$isTypedArray","$156c3727697ab085$exports","$64568844439edb7f$var$hasOwnProperty","$64568844439edb7f$exports","inherited","isArr","isArg","isBuff","$f504n","isType","skipIndexes","$292432068be14a79$var$objectProto","$292432068be14a79$exports","Ctor","$0b26005314403d97$var$nativeKeys","transform","$ff813e49bf3cca3d$exports","$0b26005314403d97$exports","$e811d2e210fb58cc$var$hasOwnProperty","$e811d2e210fb58cc$exports","$ac2c42592aa05543$exports","$08f0eaf3fbcb2fde$exports","$7958eecccfe4cef6$exports","$ac8a81cbae0357e8$var$COMPARE_PARTIAL_FLAG","$ac8a81cbae0357e8$var$hasOwnProperty","$ac8a81cbae0357e8$exports","objProps","objLength","objStacked","skipCtor","objValue","objCtor","othCtor","$41ce0ff3b38ee753$exports","$b0226bdea11cb834$exports","$05f44e958da968eb$exports","$aedce50092a1e6a6$exports","$474f685f496bfe31$var$mapTag","$474f685f496bfe31$var$promiseTag","$474f685f496bfe31$var$setTag","$474f685f496bfe31$var$weakMapTag","$474f685f496bfe31$var$dataViewTag","$474f685f496bfe31$var$dataViewCtorString","$474f685f496bfe31$var$mapCtorString","$474f685f496bfe31$var$promiseCtorString","$474f685f496bfe31$var$setCtorString","$474f685f496bfe31$var$weakMapCtorString","$474f685f496bfe31$var$getTag","ArrayBuffer","ctorString","$474f685f496bfe31$exports","$567f2dd161ebd4f6$var$COMPARE_PARTIAL_FLAG","$567f2dd161ebd4f6$var$argsTag","$567f2dd161ebd4f6$var$arrayTag","$567f2dd161ebd4f6$var$objectTag","$567f2dd161ebd4f6$var$hasOwnProperty","$567f2dd161ebd4f6$exports","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","$769812b29c18141e$exports","$769812b29c18141e$var$baseIsEqual","$ec073f38db6e7d54$var$COMPARE_PARTIAL_FLAG","$ec073f38db6e7d54$var$COMPARE_UNORDERED_FLAG","$ec073f38db6e7d54$exports","matchData","noCustomizer","srcValue","$0ff8edf4f90a7955$exports","$6b4f84f6be7f825c$exports","$1f9d5e891556ddb9$exports","$e780807e2b795134$exports","$6b5a5095e0934938$var$symbolTag","$6b5a5095e0934938$exports","$03e9beb856e9b4cd$var$reIsDeepProp","$03e9beb856e9b4cd$var$reIsPlainProp","$03e9beb856e9b4cd$exports","$17f5c88c594eac51$var$FUNC_ERROR_TEXT","$17f5c88c594eac51$var$memoize","resolver","memoized","Cache","$17f5c88c594eac51$exports","$6aae515404bf5dd2$var$MAX_MEMOIZE_SIZE","$f9135a667399ede4$var$rePropName","$f9135a667399ede4$var$reEscapeChar","$f9135a667399ede4$var$stringToPath","$6aae515404bf5dd2$exports","number","quote","subString","$f9135a667399ede4$exports","$f16f644742c27c21$var$INFINITY","$f16f644742c27c21$var$symbolProto","$f16f644742c27c21$var$symbolToString","$f16f644742c27c21$exports","$f16f644742c27c21$var$baseToString","$f5d9385a9cc7e413$exports","$38afcbfab85a0553$exports","$4d60aa8c33155976$var$INFINITY","$4d60aa8c33155976$exports","$fd2d90f592c63519$exports","$d299ac421c05c135$exports","defaultValue","$d53c6080f339a51f$exports","$85aaea8f77d790ae$exports","hasFunc","$221e04e57e35dd04$exports","$d5fe8a98fe4800eb$var$COMPARE_PARTIAL_FLAG","$d5fe8a98fe4800eb$var$COMPARE_UNORDERED_FLAG","$d5fe8a98fe4800eb$exports","$37dff9aa04444f9c$exports","$d45a621b4548f6bb$exports","$e029d02f9dd10368$exports","$87123e72266aa58c$exports","$5aba4f6d9f8304a3$exports","$9f0778b809a8c692$var$baseFor","fromRight","iterable","$e7bbde6376f4568a$exports","$9f0778b809a8c692$exports","$35fa3296f177aa01$var$baseEach","eachFunc","$f03eae3721f9ace8$exports","$35fa3296f177aa01$exports","$b613e194c1b157de$exports","$2f2d1bf022ac3e3d$exports","$0b89d474933103bc$var$API_BASE_URL","$0b89d474933103bc$export$ca000e230c0caa3e","user","email","messages","roomId","longRoomId","userId","getState","init","currentState","snapShot","messagesFromServer","messagesList","$parcel$interopDefault","setState","newState","cb","subscribe","callBack","setUser","setRoomId","authUser","fetch","resp","createRoom","longId","getRoom","rtdbRoomId","setMessage","$dbceb6eb0fe6ebf6$export$a7fed597f4b8afd8","btnText","formEl","querySelector","idDiv","idEl","visibility","preventDefault","FormData","fromEntries","rooms","createUserInDB","$5e365b6ace611e18$export$569e234ad2db6732","btnEl","goTo","$cde79f33d0802210$export$a7fed597f4b8afd8","texto","placeholder","text","$f5aa0117cb8f5c08$var$Chat","connectedCallback","msj","$54897bc0fa12a0bd$export$5649e0907eccaff6","$e817d3341cf3ea9c$var$BASE_PATH","$e817d3341cf3ea9c$var$isGithubPages","completePath","history","pushState","handleRoute","route","routes","el","firstChild","pathname","onpopstate"],"version":3,"file":"index.09334ab0.js.map"}